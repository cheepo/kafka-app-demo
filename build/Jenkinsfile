properties([
        parameters(
                [
                        choiceParam(
                                name: 'CHART_NAME',
                                choices: ['kafka-load-consumer','kafka-load-producer']
                        ),
                        stringParam(
                                name: 'IMAGE_TAG',
                                defaultValue: ''
                        )
                ]
        )
])

pipeline {

    agent {
        kubernetes {
            label 'build-service-pod'
            defaultContainer 'jnlp'
            yamlFile '/kafka-app-demo/build/builder.yaml'
        }
    }
    options {
        skipDefaultCheckout true
    }
    environment {
         WORKDIR = '/kaniko/workspace/kafka-app-demo'
         WORKSPACEDIR = '/kaniko/workspace'
        }
    stages {
       stage('checkout') {
         steps {
           script {
             if (params.IMAGE_TAG.isEmpty()) { 
               currentBuild.result = 'ABORTED'
               error("IMAGE_TAG is empty")
             }
           }
         }
       }
       stage ('pull')  {
         steps {
             container('git') {  
                     sh 'git -C ${WORKDIR} stash'
                     sh 'git -C ${WORKDIR} pull https://github.com/cheepo/kafka-app-demo.git'
             }
         }
       }
       stage ('build') {
         steps {
                container('maven') {
                    sh 'mvn clean install -DskipTests -f /root/.m2/kafka-app-demo/${CHART_NAME}/pom.xml'
                }
         }
       }
       stage ('Build&Push with Kaniko') {
                    steps {
                            container('kaniko') {
                                    sh '/kaniko/executor --dockerfile=${WORKDIR}/build/Dockerfile_${CHART_NAME} \
                                    --context ${WORKSPACEDIR} \
                                    --force \
                                    --destination=cheepo/${CHART_NAME}:${IMAGE_TAG}'
                            }
                    }
       }
    }
}
